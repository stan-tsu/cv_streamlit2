import streamlit as st
from ultralytics import YOLO
from PIL import Image
import requests
from io import BytesIO
import os

st.set_page_config(page_title="–î–µ—Ç–µ–∫—Ü–∏—è –≤–µ—Ç—Ä–æ–≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–æ–≤", layout="wide")

st.title("üéØ –î–µ—Ç–µ–∫—Ü–∏—è –≤–µ—Ç—Ä–æ–≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–æ–≤ (YOLOv11s)")

# --- –ó–∞–≥—Ä—É–∑–∫–∞ –º–æ–¥–µ–ª–∏ ---
@st.cache_resource
def load_model():
    return YOLO("yolo11s_WTD.pt")  # –ø—É—Ç—å –∫ –≤–∞—à–µ–π –º–æ–¥–µ–ª–∏

model = load_model()

# --- –ó–∞–≥—Ä—É–∑–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º ---
st.header("1. –ó–∞–≥—Ä—É–∑–∏—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–ª—è –¥–µ—Ç–µ–∫—Ü–∏–∏")
uploaded_files = st.file_uploader(
    "–í—ã–±–µ—Ä–∏—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è (–º–æ–∂–Ω–æ –Ω–µ—Å–∫–æ–ª—å–∫–æ)", 
    type=["jpg", "jpeg", "png"], 
    accept_multiple_files=True
)

# --- –ó–∞–≥—Ä—É–∑–∫–∞ –ø–æ —Å—Å—ã–ª–∫–µ ---
st.subheader("–∏–ª–∏ —É–∫–∞–∂–∏—Ç–µ –ø—Ä—è–º—É—é —Å—Å—ã–ª–∫—É –Ω–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ")
img_url = st.text_input("URL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è")

images = []

if uploaded_files:
    for file in uploaded_files:
        img = Image.open(file)
        images.append((img, file.name))
elif img_url:
    try:
        response = requests.get(img_url)
        img = Image.open(BytesIO(response.content))
        images.append((img, "from_url.jpg"))
    except Exception as e:
        st.error(f"–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è: {e}")

# --- –î–µ—Ç–µ–∫—Ü–∏—è ---
if images:
    st.header("2. –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –¥–µ—Ç–µ–∫—Ü–∏–∏")
    cols = st.columns(len(images))
    for idx, (img, name) in enumerate(images):
        with cols[idx]:
            st.image(img, caption=f"–ò—Å—Ö–æ–¥–Ω–æ–µ: {name}", use_column_width=True)
            results = model.predict(img)
            res_img = results[0].plot()  # –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è bbox
            st.image(res_img, caption="–î–µ—Ç–µ–∫—Ü–∏—è", use_column_width=True)

# --- –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –º–æ–¥–µ–ª–∏ –∏ –º–µ—Ç—Ä–∏–∫–∞—Ö ---
st.header("3. –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –º–æ–¥–µ–ª–∏ –∏ –º–µ—Ç—Ä–∏–∫–∞—Ö")

# –í—ã–≤–æ–¥–∏–º –∫–∞—Ä—Ç–∏–Ω–∫—É —Å –º–µ—Ç—Ä–∏–∫–∞–º–∏, –µ—Å–ª–∏ –æ–Ω–∞ –µ—Å—Ç—å
metrics_img_path = "WTD_graphs.png"
if os.path.exists(metrics_img_path):
    st.image(metrics_img_path, caption="–ì—Ä–∞—Ñ–∏–∫–∏ –º–µ—Ç—Ä–∏–∫ –æ–±—É—á–µ–Ω–∏—è –∏ –≤–∞–ª–∏–¥–∞—Ü–∏–∏", use_column_width=True)
else:
    st.info("–§–∞–π–ª —Å –≥—Ä–∞—Ñ–∏–∫–∞–º–∏ –º–µ—Ç—Ä–∏–∫ (WTD_graphs.png) –Ω–µ –Ω–∞–π–¥–µ–Ω —Ä—è–¥–æ–º —Å main.py.")

st.markdown("""
---
**–ü—Ä–æ—Ü–µ—Å—Å –æ–±—É—á–µ–Ω–∏—è:**  
YOLOv11s –¥–æ–æ–±—É—á–∞–ª–∞—Å—å –Ω–∞ –∫–∞—Å—Ç–æ–º–Ω–æ–º –¥–∞—Ç–∞—Å–µ—Ç–µ –≤–µ—Ç—Ä–æ–≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–æ–≤.  
–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–ª–∏—Å—å —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã Ultralytics YOLO, –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –ø–æ mAP, –≤–∞–ª–∏–¥–∞—Ü–∏—è –Ω–∞ –æ—Ç–¥–µ–ª—å–Ω–æ–π –≤—ã–±–æ—Ä–∫–µ.
""")